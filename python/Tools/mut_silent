#!/usr/bin/env python2.6

"""
    Evan Paull; Aug 25th, 2011
    Mut Silent
    Usage: mut_silent <gzipped seq file>

	Take a 2-column tab file mapping gene IDs to the exome. Finds the largest
	ORF, reads through one codon at a time and counts the number of single mutations
	that will change the amino acid.  
"""

import gzip, sys, string
import codon_table
from optparse import OptionParser
parser = OptionParser()
(options, args) = parser.parse_args()

if len(args) != 1:
	sys.stderr.write("Usage: mut_silent <gzipped seq file>")
	sys.exit(2)

def count_ns_mutations(codon, table):

	# can't make a call about 'N's, etc...
	if codon not in table:
		return 0

	count = 0
	aa = table[codon]
	for pos in range(0,3):
		aa = table[codon]
		for base in ('A','T','G','C'):
			
			if base == codon[pos]:
				continue
	
			str = [c for c in codon]	
			str[pos] = base
			mutated_codon = "".join(str)
			if table[mutated_codon] != aa:
				count += 1

	return count

	
lc_to_uc_TT = string.maketrans(string.ascii_lowercase, string.ascii_uppercase)

# codon_table[BBB] (M = Start, * = Stop)
codon_table = codon_table.get_ncbi_codon_table("Standard")

IN_GENE = False

print "#Gene\tLongest_ORF_Length\tNon-Silent_Mutations\tSilent_Mutations"
seqs = gzip.GzipFile(args[0], 'r')
for	line in seqs:
	gene, seq = line.split("\t")
	seq = seq.translate(lc_to_uc_TT) 

	longest = 0
	ns_mut = 0

	# check all 3 ORFs
	for offset in range(0,3):

		length = 0
		ns_mutations = 0	
		for pos in range(offset,len(seq),3):
			codon = seq[pos:pos+3]	
	
			if codon not in codon_table:
				continue

			if not IN_GENE and codon_table[codon] == 'M':
				IN_GENE = True
				length += 3
				continue

			if IN_GENE:
				length += 3
				ns_mutations += count_ns_mutations(codon, codon_table)	
			
			if IN_GENE and codon_table[codon] == '*':
				if length > longest:
					longest = length
					ns_mut = ns_mutations
				break

	print gene+"\t"+str(longest)+"\t"+str(ns_mut)+"\t"+str(longest*3-ns_mut)
